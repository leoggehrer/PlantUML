@startuml DiagramCreator.CreateClassDiagram
title DiagramCreator.CreateClassDiagram
participant "CreateClassDiagram(string path,string source,string[] defines,bool force)" as CreateClassDiagram_p0_p1_p2_p3 #LightYellow
participant "analyzer.QueryTypeDeclarations()" as analyzer_QueryTypeDeclarations #LightGreen
participant "Path.Exists(a0)" as Path_Exists_a0 #LightGreen
participant "Directory.CreateDirectory(a0)" as Directory_CreateDirectory_a0 #LightGreen
participant "infoData.Contains(a0)" as infoData_Contains_a0 #LightGreen
participant "AnalyzeDeclarationSyntax(a0,a1,a2,a3)" as AnalyzeDeclarationSyntax_a0_a1_a2_a3 #LightGreen
participant "typeDeclaration.Members.Where(a0)" as typeDeclaration_Members_Where_a0 #LightGreen
participant "CreateRelations(a0)" as CreateRelations_a0 #LightGreen
participant "diagramData.AddRange(a0)" as diagramData_AddRange_a0 #LightGreen
participant "Path.Combine(a0,a1)" as Path_Combine_a0_a1 #LightGreen
participant "ReadCustomUMLFromFle(a0)" as ReadCustomUMLFromFle_a0 #LightGreen
participant "diagramData.Insert(a0,a1)" as diagramData_Insert_a0_a1 #LightGreen
participant "diagramData.Add(a0)" as diagramData_Add_a0 #LightGreen
participant "File.WriteAllLines(a0,a1)" as File_WriteAllLines_a0_a1 #LightGreen
participant "infoData.Add(a0)" as infoData_Add_a0 #LightGreen
participant "UpdateDiagramPath(a0,a1)" as UpdateDiagramPath_a0_a1 #LightGreen
autonumber
CreateClassDiagram_p0_p1_p2_p3 -[#grey]> analyzer_QueryTypeDeclarations
analyzer_QueryTypeDeclarations -[#blue]-> CreateClassDiagram_p0_p1_p2_p3 : typeDeclarations
alt#LightBlue Path.Exists(path) == false
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> Path_Exists_a0 : (path)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> Directory_CreateDirectory_a0 : (path)
end
loop#LightCoral typeDeclarations
 alt#LightBlue infoData.Contains($"{nameof(fileName)}:{fileName}{PlantUMLExtension}") == false
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> infoData_Contains_a0 : ($"{nameof(fileName)}:{fileName}{PlantUMLExtension}")
 end
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> AnalyzeDeclarationSyntax_a0_a1_a2_a3 : (semanticModel, typeDeclaration, diagramData, 0)
 loop#LightCoral typeDeclaration.Members.Where(m => m is ClassDeclarationSyntax)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> typeDeclaration_Members_Where_a0 : (m => m is ClassDeclarationSyntax)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> AnalyzeDeclarationSyntax_a0_a1_a2_a3 : (semanticModel, member, diagramData, 0)
 end
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> CreateRelations_a0 : (diagramData)
 CreateRelations_a0 -[#blue]-> CreateClassDiagram_p0_p1_p2_p3 : relations
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> diagramData_AddRange_a0 : (relations)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> Path_Combine_a0_a1 : (path, fileName)
 Path_Combine_a0_a1 -[#blue]-> CreateClassDiagram_p0_p1_p2_p3 : filePath
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> diagramData_AddRange_a0 : (ReadCustomUMLFromFle(filePath))
 diagramData_AddRange_a0 -[#grey]> ReadCustomUMLFromFle_a0 : (ReadCustomUMLFromFle(filePath))
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> diagramData_Insert_a0_a1 : (0, $"@{StartUmlLabel} {title}")
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> diagramData_Insert_a0_a1 : (1, $"title {title}")
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> diagramData_Add_a0 : ($"@{EndUmlLabel}")
 alt#LightBlue force || Path.Exists(filePath) == false
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> Path_Exists_a0 : (filePath)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> File_WriteAllLines_a0_a1 : (filePath, diagramData)
 end
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> infoData_Add_a0 : ($"{nameof(title)}:{title} (CD)")
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> infoData_Add_a0 : ($"{nameof(fileName)}:{fileName}")
end
alt#LightBlue force || Path.Exists(Path.Combine(path, infoFileName)) == false
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> Path_Exists_a0 : (Path.Combine(path, infoFileName))
 Path_Exists_a0 -[#grey]> Path_Combine_a0_a1 : (Path.Combine(path, infoFileName))
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> File_WriteAllLines_a0_a1 : (Path.Combine(path, infoFileName), infoData)
 File_WriteAllLines_a0_a1 -[#grey]> Path_Combine_a0_a1 : (Path.Combine(path, infoFileName), infoData)
 CreateClassDiagram_p0_p1_p2_p3 -[#grey]> UpdateDiagramPath_a0_a1 : (path, InfoFileFilter)
end
@enduml
