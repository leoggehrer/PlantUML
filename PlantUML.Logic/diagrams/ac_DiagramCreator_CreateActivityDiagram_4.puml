@startuml DiagramCreator.CreateActivityDiagram
title DiagramCreator.CreateActivityDiagram
start
#LightGreen:Params(string path,string source,string[] defines,bool withDeclarations,bool force);
#LightSkyBlue:var infoFileName = "ac_info.txt"\nvar fileCounter = 0\nvar infoData = new List<string>()\nvar analyzer = new CSharpAnalyzer(source, defines)\nvar classNodes = analyzer.QueryClassDeclarations();
#LightYellow:if (Path.Exists(path) == false) then (<color:green>yes)
  #WhiteSmoke:Directory.CreateDirectory(path);
endif
:iterator = classNodes.GetIterator();
while (iterator.MoveNext()) is (<color:green>yes)
  :classNode = iterator.Current();
    :iterator = methodNodes.GetIterator();
    while (iterator.MoveNext()) is (<color:green>yes)
      :methodNode = iterator.Current();
          #LightYellow:if (infoData.Contains($"{nameof(fileName)}:{fileName}{PlantUMLExtension}") == false) then (<color:green>yes)
            #WhiteSmoke:fileName = $"{fileName}{PlantUMLExtension}";
            else (<color:red>no)
              #WhiteSmoke:fileName = $"{fileName}_{++fileCounter}{PlantUMLExtension}";
          endif
          #WhiteSmoke:diagramData.AddRange(ReadCustomUMLFromFle(filePath));
          #WhiteSmoke:diagramData.Insert(0, $"@{StartUmlLabel} {title}");
          #WhiteSmoke:diagramData.Insert(1, $"title {title}");
          #WhiteSmoke:diagramData.Insert(2, "start");
          #WhiteSmoke:diagramData.Add("stop");
          #WhiteSmoke:diagramData.Add($"@{EndUmlLabel}");
          #LightYellow:if (force || Path.Exists(filePath) == false) then (<color:green>yes)
            #WhiteSmoke:File.WriteAllLines(filePath, diagramData);
          endif
          #WhiteSmoke:infoData.Add($"{nameof(title)}:{title} (AC)");
          #WhiteSmoke:infoData.Add($"{nameof(fileName)}:{fileName}");
          #WhiteSmoke:infoData.Add($"generated_on:{DateTime.UtcNow}");
          #WhiteSmoke:infoData.Add($"generated_by:generated with the DiagramCreator by Prof.Gehrer");
    endwhile (<color:red>no)
endwhile (<color:red>no)
#LightYellow:if (force || Path.Exists(Path.Combine(path, infoFileName)) == false) then (<color:green>yes)
  #WhiteSmoke:File.WriteAllLines(Path.Combine(path, infoFileName), infoData);
  #WhiteSmoke:UpdateDiagramPath(path, InfoFileFilter);
endif
stop
@enduml
