@startuml DiagramCreator.CreateCompleteActivityDiagram
title DiagramCreator.CreateCompleteActivityDiagram
participant "CreateCompleteActivityDiagram(string path,bool force)" as CreateCompleteActivityDiagram_p0_p1 #LightYellow
participant "Path.Combine(a0,a1)" as Path_Combine_a0_a1 #LightGreen
participant "Directory.GetFiles(path,PlantUMLExtension.Replace(".","*."),SearchOption.AllDirectories).Where(a0)" as Directory_GetFiles_path_PlantUMLExtension_Replace_SearchOption_AllDirectories_Where_a0 #LightGreen
participant "File.Exists(a0)" as File_Exists_a0 #LightGreen
participant "File.ReadAllLines(a0)" as File_ReadAllLines_a0 #LightGreen
participant "infoData.Select(l=>l.Split(':')).Where(d=>d[0].Equals("fileName",StringComparison.OrdinalIgnoreCase)).Select(a0)" as infoData_Select_l_l_Split_Where_d_d_0_Equals_fileName_StringComparison_OrdinalIgnoreCase_Select_a0 #LightGreen
participant "files.Where(f=>Path.GetFileName(f)==infoItem).Distinct()" as files_Where_f_Path_GetFileName_f_infoItem_Distinct #LightGreen
participant "umlFiles.AddRange(a0)" as umlFiles_AddRange_a0 #LightGreen
participant "ExtractUMLItems(lines).ToArray()" as ExtractUMLItems_lines_ToArray #LightGreen
participant "lines.Where(l=>l.StartsWith("title")).ToArray()" as lines_Where_l_l_StartsWith_title_ToArray #LightGreen
participant "acItems[i].Insert(a0,a1)" as acItems_i_Insert_a0_a1 #LightGreen
participant "umlItems.AddRange(a0)" as umlItems_AddRange_a0 #LightGreen
participant "acItems.Where(a0)" as acItems_Where_a0 #LightGreen
participant "diagramData.AddRange(a0)" as diagramData_AddRange_a0 #LightGreen
participant "diagramData.Insert(a0,a1)" as diagramData_Insert_a0_a1 #LightGreen
participant "diagramData.Add(a0)" as diagramData_Add_a0 #LightGreen
participant "Path.Exists(a0)" as Path_Exists_a0 #LightGreen
participant "File.WriteAllLines(a0,a1)" as File_WriteAllLines_a0_a1 #LightGreen
participant "completeInfoData.Add(a0)" as completeInfoData_Add_a0 #LightGreen
autonumber
CreateCompleteActivityDiagram_p0_p1 -[#grey]> Path_Combine_a0_a1 : (path, infoFileName)
Path_Combine_a0_a1 -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : infoFilePath
CreateCompleteActivityDiagram_p0_p1 -[#grey]> Directory_GetFiles_path_PlantUMLExtension_Replace_SearchOption_AllDirectories_Where_a0 : (f => Path.GetFileName(f).StartsWith("ac_"))
Directory_GetFiles_path_PlantUMLExtension_Replace_SearchOption_AllDirectories_Where_a0 -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : files
alt#LightBlue File.Exists(infoFilePath)
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> File_Exists_a0 : (infoFilePath)
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> File_ReadAllLines_a0 : (infoFilePath)
 File_ReadAllLines_a0 -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : infoData
 loop#LightCoral infoData.Select(l => l.Split(':')) .Where(d => d[0].Equals("fileName", StringComparison.OrdinalIgnoreCase)) .Select(d => d[1])
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> infoData_Select_l_l_Split_Where_d_d_0_Equals_fileName_StringComparison_OrdinalIgnoreCase_Select_a0 : (d => d[1])
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> files_Where_f_Path_GetFileName_f_infoItem_Distinct
 files_Where_f_Path_GetFileName_f_infoItem_Distinct -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : query
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> umlFiles_AddRange_a0 : (query)
 end
 else
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> umlFiles_AddRange_a0 : (files)
end
loop#LightCoral umlFiles
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> File_ReadAllLines_a0 : (file)
 File_ReadAllLines_a0 -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : lines
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> ExtractUMLItems_lines_ToArray
 ExtractUMLItems_lines_ToArray -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : acItems
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> lines_Where_l_l_StartsWith_title_ToArray
 lines_Where_l_l_StartsWith_title_ToArray -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : acTitles
 alt#LightBlue acItems.Length == acTitles.Length
 loop#LightCoral i < acItems.Length
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> acItems_i_Insert_a0_a1 : (1, $"note right: {acTitles[i].Replace("title", string.Empty)}")
 end
 end
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> umlItems_AddRange_a0 : (acItems.Where(e => e.Count > 3))
 umlItems_AddRange_a0 -[#grey]> acItems_Where_a0 : (acItems.Where(e => e.Count > 3))
end
CreateCompleteActivityDiagram_p0_p1 -[#grey]> Path_Combine_a0_a1 : (path, fileName)
Path_Combine_a0_a1 -[#blue]-> CreateCompleteActivityDiagram_p0_p1 : filePath
loop#LightCoral umlItems
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_AddRange_a0 : (item)
end
alt#LightBlue diagramData.Count > 0
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Insert_a0_a1 : (0, $"@{StartUmlLabel} CompleteActivityDiagram")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Insert_a0_a1 : (1, "header")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Insert_a0_a1 : (2, $"generated on {DateTime.UtcNow}")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Insert_a0_a1 : (3, "end header")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Insert_a0_a1 : (4, "title CompleteActivityDiagram")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Add_a0 : ("footer")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Add_a0 : ("generated with the DiagramCreator by Prof.Gehrer")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Add_a0 : ("end footer")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> diagramData_Add_a0 : ($"@{EndUmlLabel}")
 alt#LightBlue force || Path.Exists(filePath) == false
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> Path_Exists_a0 : (filePath)
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> File_WriteAllLines_a0_a1 : (filePath, diagramData)
 end
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> completeInfoData_Add_a0 : ($"title:All acivity diagrams (AC)")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> completeInfoData_Add_a0 : ($"{nameof(fileName)}:{fileName}")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> completeInfoData_Add_a0 : ($"generated_on:{DateTime.UtcNow}")
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> completeInfoData_Add_a0 : ($"generated_by:generated with the DiagramCreator by Prof.Gehrer")
end
alt#LightBlue force || Path.Exists(Path.Combine(path, comleteInfoFileName)) == false
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> Path_Exists_a0 : (Path.Combine(path, comleteInfoFileName))
 Path_Exists_a0 -[#grey]> Path_Combine_a0_a1 : (Path.Combine(path, comleteInfoFileName))
 CreateCompleteActivityDiagram_p0_p1 -[#grey]> File_WriteAllLines_a0_a1 : (Path.Combine(path, comleteInfoFileName), completeInfoData)
 File_WriteAllLines_a0_a1 -[#grey]> Path_Combine_a0_a1 : (Path.Combine(path, comleteInfoFileName), completeInfoData)
end
@enduml
